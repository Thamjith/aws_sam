AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-dynamodb

  Sample SAM Template for lambda-dynamodb
  
Globals:
  Function:
    Timeout: 10

Resources:
  FetchAllUsers:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: rest/
      Handler: app.FetchAllUsers
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        FetchAllUsers:
          Type: Api
          Properties:
            Path: /FetchAllUsers
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
  CreateUsers:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: rest/
      Handler: app.CreateUsers
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        CreateUsers:
          Type: Api
          Properties:
            Path: /CreateUsers
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
  DeleteUser:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: rest/
      Handler: app.DeleteUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        DeleteUser:
          Type: Api
          Properties:
            Path: /DeleteUser
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
  UpdateUser:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: rest/
      Handler: app.UpdateUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        UpdateUser:
          Type: Api
          Properties:
            Path: /UpdateUser
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: usersDB
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

Outputs:
  WebEndpoint:
    Description: "REST API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
